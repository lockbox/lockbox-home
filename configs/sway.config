# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term wezterm
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $bemenu_command bemenu-run --ifne -C -T --single-instance --counter always -f -i -p 'run >'
set $menu $bemenu_command | wmenu | xargs swaymsg exec --
 
# TODO: screenshot command
#set $screenshot flameshot

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg /home/lockbox/Pictures/wallpaper.png fill

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output eDP-1 resolution 2880x1920@60Hz scale 1.75

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * power off"' \
         resume 'swaymsg "output * power on"' \
         before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Manual Locking
set $lockscreen swayidle -w \
         timeout 1 'swaylock -f -c 000000' \
         timeout 10 'swaymsg "output * power off"' \
         resume 'swaymsg "output * power on"; pkill -nx swayidle' 
bindsym $mod+Ctrl+Shift+Q exec $lockscreen

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "type:keyboard" {
    xkb_layout us
    xkb_options caps:escape
}

input "type:touchpad" {
    dwt enabled
    tap enabled
    natural_scroll disabled
    middle_emulation enabled
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    #bindsym $mod+d exec $menu
    bindsym $alt+Space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position bottom
    mode dock
    separator_symbol " "
    strip_workspace_numbers yes
    workspace_min_width 36
    status_command i3status-rs

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %X'; do sleep 1; done

    colors {
        statusline #93a1a1
        background #002b36
        separator #268bd2
        focused_workspace #073642 #073642 #eee8d5
        active_workspace #073642 #073642 #586e75
        inactive_workspace #002b36 #002b36 #586e75
        urgent_workspace #dc322f #dc322f #fdf6e3
    }
}

# Now the coloring, which we want equivalent to the following in an i3 compatible configuration
#
# Create variables from Xresources for wm look
# set_from_resource $focused.color.border wm.client.focused.color.border "#002b36"
# set_from_resource $focused.color.background wm.client.focused.color.background "#586e75"
# set_from_resource $focused.color.text wm.client.focused.color.text "#fdf6e3"
# set_from_resource $focused.color.indicator wm.client.focused.color.indicator "#268bd2"
# set_from_resource $focused.color.child_border wm.client.focused.color.child_border
#
# set_from_resource $focused_inactive.color.border wm.client.focused_inactive.color.border "#002b36"
# set_from_resource $focused_inactive.color.background wm.client.focused_inactive.color.background "#073642"
# set_from_resource $focused_inactive.color.text wm.client.focused_inactive.color.text "#839496"
# set_from_resource $focused_inactive.color.indicator wm.client.focused_inactive.color.indicator "#073642"
# set_from_resource $focused_inactive.color.child_border wm.client.focused_inactive.color.child_border
#
# set_from_resource $unfocused.color.border wm.client.unfocused.color.border "#002b36"
# set_from_resource $unfocused.color.background wm.client.unfocused.color.background "#073642"
# set_from_resource $unfocused.color.text wm.client.unfocused.color.text "#839496"
# set_from_resource $unfocused.color.indicator wm.client.unfocused.color.indicator "#073642"
# set_from_resource $unfocused.color.child_border wm.client.unfocused.color.child_border
#
# set_from_resource $urgent.color.border wm.client.urgent.color.border "#002b36"
# set_from_resource $urgent.color.background wm.client.urgent.color.background "#dc322f"
# set_from_resource $urgent.color.text wm.client.urgent.color.text "#fdf6e3"
# set_from_resource $urgent.color.indicator wm.client.urgent.color.indicator "#002b36"
# set_from_resource $urgent.color.child_border wm.client.urgent.color.child_border
#
#
# # Window Border color
# # class                 border                             background                         text                               indicator                          child_border
# client.focused          $focused.color.border              $focused.color.background          $focused.color.text                $focused.color.indicator           $focused.color.child_border
# client.focused_inactive $focused_inactive.color.border     $focused_inactive.color.background $focused_inactive.color.text       $focused_inactive.color.indicator  $focused_inactive.color.child_border
# client.unfocused        $unfocused.color.border            $unfocused.color.background        $unfocused.color.text              $unfocused.color.indicator         $unfocused.color.child_border
# client.urgent           $urgent.color.border               $urgent.color.background           $urgent.color.text                 $urgent.color.indicator            $urgent.color.child_border
client.focused          "#002b36" "#586e75" "#fdf6e3" "#268bd2"
client.focused_inactive "#002b36" "#073642" "#839496" "#073642"
client.unfocused        "#002b36" "#073642" "#839496" "#073642"
client.urgent           "#002b36" "#dc322f" "#fdf6e3" "#002b36"


# gaps
gaps inner 5
gaps outer 0
smart_gaps on

# gaps adjustments
bindsym --to-code $mod+Shift+minus gaps inner current minus 6
bindsym --to-code $mod+Shift+plus  gaps inner current plus 6

# hide borders when only one windoe in the workspace
hide_edge_borders smart

# enable popups during fullscreen
popup_during_fullscreen smart

# no titlebars
default_floating_border pixel 1
default_border pixel 1

# only move focus with keybinds
focus_follows_mouse no

# modular confs go here
include /home/lockbox/.config/sway/config.d/*
